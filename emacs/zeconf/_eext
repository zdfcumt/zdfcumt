
;;―――――-cedet setting―――――――
;;自定义自动补齐命令，如果在单词中间就补齐，否则就是tab。
(defun my-indent-or-complete ()
  (interactive)
  (if (looking-at "\\>")
    (hippie-expand nil)
    (indent-for-tab-command)
  )
 )
(global-set-key [(control tab)] 'my-indent-or-complete)


;;hippie的自动补齐策略，优先调用了senator的分析结果：
(autoload 'senator-try-expand-semantic "senator")
(setq hippie-expand-try-functions-list
    '(
        senator-try-expand-semantic
        try-expand-dabbrev
        try-expand-dabbrev-visible
        try-expand-dabbrev-all-buffers
        try-expand-dabbrev-from-kill
        try-expand-list
        try-expand-list-all-buffers
        try-expand-line
        try-expand-line-all-buffers
        try-complete-file-name-partially
        try-complete-file-name
        try-expand-whole-kill
    )
)

;;speedbar关联到了F4上
(global-set-key [(f4)] 'speedbar)



;;ecb设置
;;打开emacs，然后M-x ecb-activate即可打开ecb。
(global-set-key [f3] 'ecb-activate)




;;因为gdb-many-windows的窗口太小,有时候不能完全显示一行的内容,所以不得不来回切换gdb-many-windows模式,在绑定快捷键以后就方便多了.
;;start gdb
(global-set-key [f7] 'gdb)
;;toggle gdb-many-windows
(add-hook 'gdb-mode-hook
  '(lambda ()
    (local-set-key [(f8)] 'gdb-many-windows)
  )
)




;;代码折叠
(require 'semantic-tag-folding nil 'noerror)
(global-semantic-tag-folding-mode 1)
;;按键绑定到了[C-c , -]和[C-c , +]上
;;define-key semantic-tag-folding-mode-map (kbd "C-c , -") 'semantic-tag-folding-fold-block)
;;(define-key semantic-tag-folding-mode-map (kbd "C-c , =") 'semantic-tag-folding-show-block)
;;同时打开和折叠整个buffer的所有代码，绑定到了[C-c _]和[C-c +]上
;;(define-key semantic-tag-folding-mode-map (kbd "C-c _") 'semantic-tag-folding-fold-all)
;;(define-key semantic-tag-folding-mode-map (kbd "C-c +") 'semantic-tag-folding-show-all))
(global-set-key (kbd "C-c d -") 'hide-ifdef-block)
(global-set-key (kbd "C-c d =") 'show-ifdef-block)
(global-set-key (kbd "C-c d _") 'hide-ifdefs)
(global-set-key (kbd "C-c d +") 'show-ifdefs)
(global-set-key (kbd "C-c -") 'hs-hide-block)
(global-set-key (kbd "C-c =") 'hs-show-block)
(global-set-key (kbd "C-c _") 'hs-hide-all)
(global-set-key (kbd "C-c +") 'hs-show-all)



;;跳转
(global-set-key [f1] 'semantic-ia-fast-jump)
;;回跳
(global-set-key [C-f1]
                (lambda ()
                  (interactive)
                  (if (ring-empty-p (oref semantic-mru-bookmark-ring ring))
                      (error "Semantic Bookmark ring is currently empty"))
                  (let* ((ring (oref semantic-mru-bookmark-ring ring))
                         (alist (semantic-mrub-ring-to-assoc-list ring))
                         (first (cdr (car alist))))
                    (if (semantic-equivalent-tag-p (oref first tag)
                                                   (semantic-current-tag))
                        (setq first (cdr (car (cdr alist)))))
                    (semantic-mrub-switch-tags first))))

;;实现与声明的跳转
(define-key c-mode-base-map [C-S-f1] 'semantic-analyze-proto-impl-toggle)




(global-set-key [f10] 'compile) 
(global-set-key [f11] 'next-error)   
;; Make compile command                                                                                                                                                              
(defun make-compile-command () 
   (unless (or (file-exists-p "makefile") 
               (file-exists-p "Makefile")) 
     (set (make-local-variable 'compile-command) 
          (concat "g++ " (file-relative-name buffer-file-name) " -Wall -W -pipe -O2 -s && ./a")))) 
(add-hook 'c++-mode-hook 'make-compile-command) 




